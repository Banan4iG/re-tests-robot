*** Settings ***
Library    RemoteSwingLibrary
Resource    ../../../files/keywords.resource
Test Setup       Setup before every tests
Test Teardown    Teardown after every tests

*** Test Cases ***
test_name
    Init Edit Column
    Clear Text Field    nameField
    Type Into Text Field    nameField    MODIFIED_COLUMN
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN TO MODIFIED_COLUMN
    Check Column In Table    column_name=MODIFIED_COLUMN

test_type
    Init Edit Column
    Select From Combo Box    typesCombo    BIGINT
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN TYPE BIGINT
    Check Column In Table    data_type=BIGINT

test_size
    Init Edit Column
    Select From Combo Box    typesCombo    VARCHAR
    Clear Text Field    sizeField
    Type Into Text Field    sizeField    50
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN TYPE VARCHAR(50)
    Check Column In Table    data_type=VARCHAR    size=50

test_not_null
    Check Skip 26
    Init Edit Column
    Check Check Box    requiredCheck
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN SET NOT NULL
    ${row}=    Check Column In Table
    ${required}=    Get Table Cell Value    0    ${row}    Required    model
    Should Be Equal As Strings    ${required}    true

test_remove_not_null
    Check Skip 26
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN INT NOT NULL)
    Uncheck Check Box    requiredCheck
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN DROP NOT NULL
    ${row}=    Check Column In Table
    ${required}=    Get Table Cell Value    0    ${row}    Required    model
    Should Be Equal As Strings    ${required}    false

test_add_default
    Init Edit Column
    Select Tab As Context    Default Value
    Clear Text Field    0
    Type Into Text Field    0    100
    Select Main Window
    Select Dialog    Edit table column
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN SET DEFAULT 100
    ${row}=    Check Column In Table
    ${default_value}=    Get Table Cell Value    0    ${row}    Default
    Should Be Equal As Strings    ${default_value}    100

test_remove_default
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN INT DEFAULT 100)
    Select Tab As Context    Default Value
    Clear Text Field    0
    Select Main Window
    Select Dialog    Edit table column
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN DROP DEFAULT
    ${row}=    Check Column In Table
    ${default_value}=    Get Table Cell Value    0    ${row}    Default
    Should Be Empty    ${default_value}

test_computed_by
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN_2 INT, TEST_COLUMN INT COMPUTED BY (TEST_COLUMN_2 * 2))
    Select Tab As Context    Computed by
    Clear Text Field    0
    Type Into Text Field    0    COMPUTED BY (TEST_COLUMN_2 * 3)
    Select Main Window
    Select Dialog    Edit table column
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN COMPUTED BY (TEST_COLUMN_2 * 3)
    ${row}=    Check Column In Table    data_type=BIGINT
    ${computed}=    Get Table Cell Value    0    ${row}    Computed Source
    Should Be Equal As Strings    ${computed}    TEST_COLUMN_2 * 3    strip_spaces=${True}
    Execute Immediate    INSERT INTO TEST_TABLE (TEST_COLUMN_2) VALUES (2)
    ${res}=    Execute    SELECT * FROM TEST_TABLE
    Should Be Equal As Strings    ${res}    [(2, 6)]

test_identity_to_always
    Check Skip
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN INT GENERATED BY DEFAULT AS IDENTITY)
    Check Box Should Be Checked    incrementedCheck
    Select From Combo Box    identityCombo    GENERATED ALWAYS
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN SET GENERATED ALWAYS
    Check Column In Table
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    Run Keyword And Expect Error    STARTS:DatabaseError:    Execute Immediate    INSERT INTO TEST_TABLE (TEST_COLUMN) VALUES (10)
    ${res}=    Execute    SELECT * FROM TEST_TABLE
    Should Be Equal As Strings    ${res}    [(1,), (2,)]

test_identity_to_by_default
    Check Skip
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN INT GENERATED ALWAYS AS IDENTITY)
    Check Box Should Be Checked    incrementedCheck
    Select From Combo Box    identityCombo    GENERATED BY DEFAULT
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN SET GENERATED BY DEFAULT
    Check Column In Table
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    Execute Immediate    INSERT INTO TEST_TABLE (TEST_COLUMN) VALUES (10)
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    ${res}=    Execute    SELECT * FROM TEST_TABLE
    Should Be Equal As Strings    ${res}    [(1,), (10,), (2,)]

test_identity_start_with
    ${ver}=    Check Skip 26
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN INT GENERATED BY DEFAULT AS IDENTITY)
    Clear Text Field    startValueField
    Type Into Text Field    startValueField    100
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN RESTART WITH 100
    Check Column In Table
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    ${res}=    Execute    SELECT * FROM TEST_TABLE
    IF    ${{$ver == '5.0'}}
        Should Be Equal As Strings    ${res}    [(100,), (101,)]
    ELSE
        Should Be Equal As Strings    ${res}    [(101,), (102,)]
    END

test_identity_increment
    Check Skip
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN INT GENERATED ALWAYS AS IDENTITY)
    Clear Text Field    incrementField
    Type Into Text Field    incrementField    5
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN SET INCREMENT BY 5
    Check Column In Table
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    ${res}=    Execute    SELECT TEST_COLUMN FROM TEST_TABLE
    Should Be Equal As Strings    ${res}    [(5,), (10,)]

test_remove_identity
    Check Skip
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN INT GENERATED ALWAYS AS IDENTITY)
    Uncheck Check Box    incrementedCheck
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN DROP IDENTITY
    Check Column In Table

test_add_new_gen_without_identity
    Init Edit Column    query=CREATE TABLE TEST_TABLE (COL INT)   column_name=COL
    Check Check Box    incrementedCheck
    Check Box Should Be Checked    requiredCheck
    Select Tab    Autoincrement    
    ${old}=    Set Jemmy Timeouts    100ms
    Run Keyword And Expect Error    org.netbeans.jemmy.TimeoutExpiredException: Wait for "identityRadio" subcomponent to be displayed    Push Radio Button    identityRadio
    Push Radio Button    newSequenceRadio
    Clear Text Field    sequenceNameField
    Type Into Text Field    sequenceNameField    AUTO_GEN
    Check SQL Statements    ${True}    AUTO_GEN    dialog1    ALTER TABLE TEST_TABLE ALTER COLUMN COL SET NOT NULL    COL
    Check Column In Table    COL
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    ${res}=    Execute    SELECT COL FROM TEST_TABLE
    ${info}=    Get Server Info
    ${ver}=     Set Variable    ${info}[1]
    IF    ${{$ver == '5.0'}}
        Should Be Equal As Strings    ${res}    [(0,), (1,)]
    ELSE
        Should Be Equal As Strings    ${res}    [(1,), (2,)]
    END

test_add_use_gen_without_identity
    Init Edit Column    query=CREATE TABLE TEST_TABLE (COL INT)   column_name=COL
    Check Check Box    incrementedCheck
    Check Box Should Be Checked    requiredCheck
    Select Tab    Autoincrement
    ${old}=    Set Jemmy Timeouts    100ms
    Run Keyword And Expect Error    org.netbeans.jemmy.TimeoutExpiredException: Wait for "identityRadio" subcomponent to be displayed    Push Radio Button    identityRadio
    Push Radio Button    existingSequenceRadio
    Select From Combo Box    sequencesCombo    EMP_NO_GEN
    Check SQL Statements    ${False}    gen_name=EMP_NO_GEN    dialog=dialog1    alter_table=ALTER TABLE TEST_TABLE ALTER COLUMN COL SET NOT NULL    column_name=COL
    Check Column In Table    column_name=COL
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    ${res}=    Execute    SELECT COL FROM TEST_TABLE
    Should Be Equal As Strings    ${res}    [(146,), (147,)]
    
test_identity_to_new_gen
    Check Skip
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN INT GENERATED BY DEFAULT AS IDENTITY)
    Push Radio Button    newSequenceRadio
    Select Dialog    Warning
    Label Text Should Be    0    Using IDENTITY is preferred when creating an auto-incremented column
    Push Button    OK
    Select Dialog    Edit table column
    Clear Text Field    sequenceNameField
    Type Into Text Field    sequenceNameField    AUTO_GEN
    Clear Text Field    startValueField
    Type Into Text Field    startValueField    0
    Check SQL Statements    ${True}    AUTO_GEN
    Check Column In Table
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    ${res}=    Execute    SELECT TEST_COLUMN FROM TEST_TABLE
    Should Be Equal As Strings    ${res}    [(0,), (1,)]

test_identity_to_use_gen
    Check Skip
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN INT GENERATED BY DEFAULT AS IDENTITY)
    Push Radio Button    existingSequenceRadio
    Select Dialog    Warning
    Label Text Should Be    0    Using IDENTITY is preferred when creating an auto-incremented column
    Push Button    OK
    Select Dialog    Edit table column
    Select From Combo Box    sequencesCombo    EMP_NO_GEN
    Check SQL Statements    ${False}    EMP_NO_GEN
    Check Column In Table
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    Execute Immediate    INSERT INTO TEST_TABLE DEFAULT VALUES
    ${res}=    Execute    SELECT TEST_COLUMN FROM TEST_TABLE
    Should Be Equal As Strings    ${res}    [(146,), (147,)]

test_check_autogen_seq_name
    Init Edit Column    CREATE TABLE TEST_TABLE (NEW_TABLE_COLUMN_1 INT, NEW_TABLE_COLUMN_2 INT)    NEW_TABLE_COLUMN_2
    Check Check Box    incrementedCheck
    Select Tab    Autoincrement    
    Push Radio Button    newSequenceRadio
    ${name}=    Get Text Field Value    sequenceNameField
    Sleep    5s
    Should Be Equal As Strings    ${name}    SEQ_FOR_TEST_TABLE_NEW_TABLE_COLUMN_2

test_type_to_domain
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN VARCHAR(30))
    Check Check Box    useDomainCheck
    Select From Combo Box    domainCombo    ADDRESSLINE
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN TYPE ADDRESSLINE
    ${row}=    Check Column In Table    data_type=VARCHAR    size=30
    ${domain}=    Get Table Cell Value    0    ${row}    Domain
    Should Be Equal As Strings    ${domain}    ADDRESSLINE

test_domain_to_type
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN ADDRESSLINE)
    Uncheck Check Box    useDomainCheck
    ${domain}=    Get Selected Item From Combo Box    domainCombo
    Should Be Empty    ${domain}
    Check Edit Commit    ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN TYPE VARCHAR(30)
    ${row}=    Check Column In Table    data_type=VARCHAR    size=30
    ${domain}=    Get Table Cell Value    0    ${row}    Domain
    Should Not Be Equal As Strings    ${domain}    ADDRESSLINE

test_check_ddl_to_create
    Init Edit Column    CREATE TABLE TEST_TABLE (TEST_COLUMN VARCHAR(30) DEFAULT 'test' NOT NULL)
    Select Tab As Context    DDL to create
    ${ddl}=    Get Text Field Value    0
    Should Be Equal As Strings    ${ddl}    ALTER TABLE TEST_TABLE ADD TEST_COLUMN VARCHAR(30) DEFAULT 'test' NOT NULL;    strip_spaces=${True}    collapse_spaces=${True}

test_check_autoupdate_object_tree
    Init Edit Column    query=CREATE TABLE TEST_TABLE (COL INT)   column_name=COL
    Check Check Box    incrementedCheck
    Select Tab    Autoincrement    
    Push Radio Button    newSequenceRadio
    Clear Text Field    sequenceNameField
    Type Into Text Field    sequenceNameField    AUTO_GEN
    Check SQL Statements    ${True}    AUTO_GEN    dialog1    ALTER TABLE TEST_TABLE ALTER COLUMN COL SET NOT NULL    COL
    Select Main Window
    Expand Tree Node    0    New Connection|Table Triggers (5)
    Tree Node Should Exist    0   New Connection|Table Triggers (5)|TRIGGER_BI_TEST_TABLE_COL
    Expand Tree Node    0    New Connection|Sequences (3)
    Tree Node Should Exist    0   New Connection|Sequences (3)|AUTO_GEN

*** Keywords ***
Init Edit Column
    [Arguments]    ${query}=CREATE TABLE TEST_TABLE (TEST_COLUMN INT)   ${column_name}=TEST_COLUMN
    Lock Employee
    Execute Immediate    ${query}
    Open connection
    Click On Tree Node    0    New Connection|Tables (11)|TEST_TABLE    2
    Select Tab    Columns
    ${row}=    Find Table Row    0    ${column_name}    Name
    Run Keyword In Separate Thread    Click On Table Cell    0    ${row}    Name    2    BUTTON1_MASK
    Select Dialog    Edit table column

Check Edit Commit
    [Arguments]    ${expected_sql}
    Push Button    submitButton
    Sleep    0.5s
    Select Dialog    Commiting changes
    ${res}=    Get Text Field Value    0
    Should Be Equal As Strings    ${res}    ${expected_sql}    strip_spaces=${True}    collapse_spaces=${True}

    Push Button    commitButton
    Sleep    0.1s
    ${old}=    Set Jemmy Timeout    DialogWaiter.WaitDialogTimeout    0
    Run Keyword And Expect Error    org.netbeans.jemmy.TimeoutExpiredException: Dialog with name or title 'Edit table column'    Select Dialog    Edit table column

Check Column In Table
    [Arguments]    ${column_name}=TEST_COLUMN    ${data_type}=INTEGER    ${size}=${EMPTY}
    Select Main Window
    Select Tab    Columns
    ${row}=    Find Table Row    0    ${column_name}    Name
    Should Not Be Equal As Integers    ${row}    -1
    ${dt}=    Get Table Cell Value    0    ${row}    Data Type
    Should Be Equal As Strings    ${dt}    ${data_type}
    IF    '${size}' != '${EMPTY}'
        ${column_size}=    Get Table Cell Value    0    ${row}    Size or precision
        Should Be Equal As Strings    ${column_size}    ${size}
    END
    RETURN    ${row}

Check SQL Statements
    [Arguments]    ${check_sequence}    ${gen_name}    ${dialog}=Commiting changes    ${alter_table}=ALTER TABLE TEST_TABLE ALTER COLUMN TEST_COLUMN DROP IDENTITY    ${column_name}=TEST_COLUMN
    Push Button    submitButton
    Sleep    1s
    Select Dialog    ${dialog}
    # Check ALTER TABLE statement
    ${alter_row}=    Find Table Row    0    ALTER TABLE    Name operation
    Click On Table Cell    0    ${alter_row}    Name operation
    ${alter_table}=    Get Text Field Value    0
    Should Be Equal As Strings    ${alter_table}    ${alter_table}    strip_spaces=${True}    collapse_spaces=${True}
    
    # Check CREATE OR ALTER SEQUENCE statement (only if check_sequence is TRUE)
    IF    ${check_sequence}
        ${info}=    Get Server Info
        ${ver}=     Set Variable    ${info}[1]
        IF    ${{$ver != '2.6'}}
            ${sequence_row}=    Find Table Row    0    CREATE OR ALTER SEQUENCE    Name operation
            Click On Table Cell    0    ${sequence_row}    Name operation
            ${create_sequence}=    Get Text Field Value    0
            Should Be Equal As Strings    ${create_sequence}    CREATE OR ALTER SEQUENCE AUTO_GEN START WITH 0 INCREMENT BY 1    strip_spaces=${True}    collapse_spaces=${True}
        ELSE
            # Check CREATE SEQUENCE statement
            ${create_sequence_row}=    Find Table Row    0    CREATE SEQUENCE    Name operation
            Click On Table Cell    0    ${create_sequence_row}    Name operation
            ${create_sequence}=    Get Text Field Value    0
            Should Be Equal As Strings    ${create_sequence}    CREATE SEQUENCE ${gen_name}    strip_spaces=${True}    collapse_spaces=${True}
            
            # Check ALTER SEQUENCE statement
            ${alter_sequence_row}=    Find Table Row    0    ALTER SEQUENCE    Name operation
            Click On Table Cell    0    ${alter_sequence_row}    Name operation
            ${alter_sequence}=    Get Text Field Value    0
            Should Be Equal As Strings    ${alter_sequence}    ALTER SEQUENCE ${gen_name} RESTART WITH 1    strip_spaces=${True}    collapse_spaces=${True}
        END
    END
    
    # Check CREATE TRIGGER statement
    ${trigger_row}=    Find Table Row    0    CREATE TRIGGER    Name operation
    Click On Table Cell    0    ${trigger_row}    Name operation
    ${create_trigger}=    Get Text Field Value    0
    ${expected_trigger}=    Catenate    SEPARATOR=${SPACE}
    ...    CREATE TRIGGER TRIGGER_BI_TEST_TABLE_${column_name}
    ...    FOR TEST_TABLE
    ...    ACTIVE BEFORE INSERT POSITION 0
    ...    AS BEGIN
    ...    IF (NEW.${column_name} IS NULL) THEN
    ...    NEW.${column_name} = NEXT VALUE FOR ${gen_name};
    ...    END
    Should Be Equal As Strings    ${create_trigger}    ${expected_trigger}    strip_spaces=${True}    collapse_spaces=${True}

    Push Button    commitButton
    Sleep    0.1s
    ${old}=    Set Jemmy Timeout    DialogWaiter.WaitDialogTimeout    0
    Run Keyword And Expect Error    org.netbeans.jemmy.TimeoutExpiredException: Dialog with name or title 'Edit table column'    Select Dialog    Edit table column
   

Check Skip
    ${info}=    Get Server Info
    ${ver}=     Set Variable    ${info}[1]
    Skip If    ${{$ver != '5.0'}}

Check Skip 26
    ${info}=    Get Server Info
    ${ver}=     Set Variable    ${info}[1]
    Skip If    ${{$ver == '2.6'}}
    RETURN    ${ver}